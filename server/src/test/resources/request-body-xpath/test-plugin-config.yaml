plugin: "io.gatehill.imposter.plugin.test.TestPluginImpl"

resources:
- method: POST
  path: /example
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "Fluffy"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
  response:
    statusCode: 204

- method: POST
  path: /example-negative
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "baz"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
    operator: NotEqualTo
  response:
    content: "NotEqualTo"

- method: POST
  path: /example
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:id"
    value: 3
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
  response:
    statusCode: 302

- method: POST
  path: /example-nonmatch
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:nothing"
    # tilde is YAML for null
    value: ~
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
  response:
    statusCode: 409

- method: POST
  path: /example-exists
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:id"
    operator: Exists
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
  response:
    statusCode: 201

- method: POST
  path: /example-not-exists
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:notexist"
    operator: NotExists
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
  response:
    statusCode: 202

- method: POST
  path: /example-contains
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "Flu"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
    operator: Contains
  response:
    content: "Contains"

- method: POST
  path: /example-contains-negative
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "Flu"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
    operator: NotContains
  response:
    content: "NotContains"

- method: POST
  path: /example-regex
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "Flu.*"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
    operator: Matches
  response:
    content: "Matches"

- method: POST
  path: /example-regex-negative
  requestBody:
    xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
    value: "Flu.*"
    xmlNamespaces:
      env: "http://schemas.xmlsoap.org/soap/envelope/"
      pets: "urn:com:example:petstore"
    operator: NotMatches
  response:
    content: "NotMatches"

- method: POST
  path: /example-allof
  requestBody:
    allOf:
    - xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
      value: "Fluffy"
      xmlNamespaces:
        env: "http://schemas.xmlsoap.org/soap/envelope/"
        pets: "urn:com:example:petstore"
    - xPath: "/env:Envelope/env:Body/pets:animal/pets:id"
      value: "3"
      xmlNamespaces:
        env: "http://schemas.xmlsoap.org/soap/envelope/"
        pets: "urn:com:example:petstore"
  response:
    content: "AllOf"

- method: POST
  path: /example-anyof
  requestBody:
    anyOf:
    - xPath: "/env:Envelope/env:Body/pets:animal/pets:name"
      value: "Fluffy"
      xmlNamespaces:
        env: "http://schemas.xmlsoap.org/soap/envelope/"
        pets: "urn:com:example:petstore"
    - xPath: "/env:Envelope/env:Body/pets:animal/pets:id"
      value: "3"
      xmlNamespaces:
        env: "http://schemas.xmlsoap.org/soap/envelope/"
        pets: "urn:com:example:petstore"
  response:
    content: "AnyOf"

- method: POST
  path: /example-system-namespaces
  requestBody:
    xPath: "/env2:Envelope/env2:Body/pets2:animal/pets2:name"
    value: "Fluffy"
  response:
    content: "System namespaces"

system:
  xmlNamespaces:
    env2: "http://schemas.xmlsoap.org/soap/envelope/"
    pets2: "urn:com:example:petstore"
